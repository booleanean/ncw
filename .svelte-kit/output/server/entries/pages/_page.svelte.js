import { c as create_ssr_component, a as subscribe, b as add_attribute, d as each, e as escape, v as validate_component } from "../../chunks/ssr.js";
import { w as writable } from "../../chunks/index.js";
const css$1 = {
  code: "form.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{display:grid;grid-column:1 / -1;grid-template-columns:subgrid;justify-items:start}table.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{border-collapse:collapse}tr.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{height:30px}th.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{height:80px;vertical-align:bottom}th.svelte-16v8pjp>div.svelte-16v8pjp.svelte-16v8pjp{transform:translate(17px, -11px) rotate(-45deg);width:30px}th.svelte-16v8pjp>div.svelte-16v8pjp>span.svelte-16v8pjp{border-bottom:1px solid #ccc;padding:5px 10px 5px 0}td.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{padding:0;border:1px solid #ccc;background:rgb(255, 99, 99);width:30px;aspect-ratio:1;white-space:nowrap;position:relative}table.bonus.svelte-16v8pjp td.svelte-16v8pjp.svelte-16v8pjp{background:#777}table.svelte-16v8pjp:not(.bonus) td.svelte-16v8pjp.svelte-16v8pjp:first-child{border-top:unset;border-left:unset;background:unset;padding:0.375rem;width:40ch}.black.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{background-color:black}label.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{display:block;height:28px}input[type='checkbox'].svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp{display:none}.bonus.svelte-16v8pjp td.svelte-16v8pjp.svelte-16v8pjp:has(:checked),td.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp:has(:checked){background:lightgreen}table.bonus.svelte-16v8pjp td.svelte-16v8pjp.svelte-16v8pjp:has(:checked)::after,td.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp:has(:checked)::after{content:var(--colorblind-v)}table.bonus.svelte-16v8pjp td.svelte-16v8pjp.svelte-16v8pjp::after,td.svelte-16v8pjp.svelte-16v8pjp.svelte-16v8pjp:not(:first-child)::after{overflow:hidden;position:absolute;inset:0;content:var(--colorblind-x);font-family:sans-serif;text-align:center;top:0.3rem;pointer-events:none}",
  map: '{"version":3,"file":"Group.svelte","sources":["Group.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { writable } from \\"svelte/store\\";\\nimport { createEventDispatcher, onMount } from \\"svelte\\";\\nexport let groupId;\\nlet colorblind;\\nlet otherGroupIds = Object.keys(localStorage).filter((v) => v !== groupId);\\nconsole.log(`Group name: ${groupId}, Other group: ${otherGroupIds[0]}`);\\nlet otherGroups = /* @__PURE__ */ new Map();\\nfor (let otherGroupId of otherGroupIds) {\\n  otherGroups.set(otherGroupId, JSON.parse(localStorage.getItem(otherGroupId) || \\"\\"));\\n}\\nlet data = writable(\\n  JSON.parse(localStorage.getItem(groupId) || `{\\"name\\": \\"\\", \\"participants\\": [], \\"grid\\": []}`)\\n);\\ndata.subscribe((value) => {\\n  localStorage.setItem(groupId, JSON.stringify(value));\\n});\\nconst checkbox = (e) => {\\n  const form = e.currentTarget;\\n  const grid = Array.from(new FormData(form).keys());\\n  data.update((v) => {\\n    return { ...v, grid };\\n  });\\n};\\n<\/script>\\r\\n\\r\\n<!-- <button on:click={destroy}>Destroy</button> -->\\r\\n<form on:change={checkbox}>\\r\\n\\t<table style={colorblind ? \\"--colorblind-v: \'v\'; --colorblind-x: \'x\'\\" : \'\'}>\\r\\n\\t\\t{#if $data.participants.length > 0}\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>\\r\\n\\t\\t\\t\\t\\t\\t<label style=\\"width: 100%; height: 100%;\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\"checkbox\\" name=\\"colorblind\\" bind:checked={colorblind} />\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t{#each $data.participants as participant}\\r\\n\\t\\t\\t\\t\\t\\t<th><div><span>{participant}</span></div></th>\\r\\n\\t\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t{#each $data.participants as participant, k1}\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>{participant}\'s thread</td>\\r\\n\\t\\t\\t\\t\\t\\t{#each $data.participants as _p2, k2}\\r\\n\\t\\t\\t\\t\\t\\t\\t{#if k1 == k2}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\"black\\">&nbsp;</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t{:else}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\"checkbox\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname={`${k1}-${k2}`}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={$data.grid.indexOf(`${k1}-${k2}`) !== -1}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t{/if}\\r\\n\\t</table>\\r\\n\\r\\n\\t{#each otherGroups as [_groupName, otherGroup], b1}\\r\\n\\t\\t<table style={colorblind ? \\"--colorblind-v: \'v\'; --colorblind-x: \'x\'\\" : \'\'} class=\\"bonus\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t{#each otherGroup.participants as participant}\\r\\n\\t\\t\\t\\t\\t\\t<th><div><span>{participant}</span></div></th>\\r\\n\\t\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t{#each $data.participants as mainParticipant, k1}\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t{#each otherGroup.participants as _participant, k2}\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\"checkbox\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname={`b${b1}-${k1}-${k2}`}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={$data.grid.indexOf(`b${b1}-${k1}-${k2}`) !== -1}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t</table>\\r\\n\\t{/each}\\r\\n</form>\\r\\n\\r\\n<style>\\r\\n\\tform {\\r\\n\\t\\tdisplay: grid;\\r\\n\\t\\tgrid-column: 1 / -1;\\r\\n\\t\\tgrid-template-columns: subgrid;\\r\\n\\t\\tjustify-items: start;\\r\\n\\t}\\r\\n\\ttable {\\r\\n\\t\\tborder-collapse: collapse;\\r\\n\\t}\\r\\n\\ttr {\\r\\n\\t\\theight: 30px;\\r\\n\\t}\\r\\n\\tth {\\r\\n\\t\\theight: 80px;\\r\\n\\t\\tvertical-align: bottom;\\r\\n\\t}\\r\\n\\tth > div {\\r\\n\\t\\ttransform: translate(17px, -11px) rotate(-45deg);\\r\\n\\t\\twidth: 30px;\\r\\n\\t}\\r\\n\\tth > div > span {\\r\\n\\t\\tborder-bottom: 1px solid #ccc;\\r\\n\\t\\tpadding: 5px 10px 5px 0;\\r\\n\\t}\\r\\n\\ttd {\\r\\n\\t\\tpadding: 0;\\r\\n\\t\\tborder: 1px solid #ccc;\\r\\n\\t\\tbackground: rgb(255, 99, 99);\\r\\n\\t\\twidth: 30px;\\r\\n\\t\\taspect-ratio: 1;\\r\\n\\t\\twhite-space: nowrap;\\r\\n\\t\\tposition: relative;\\r\\n\\t}\\r\\n\\ttable.bonus td {\\r\\n\\t\\tbackground: #777;\\r\\n\\t}\\r\\n\\ttable:not(.bonus) td:first-child {\\r\\n\\t\\tborder-top: unset;\\r\\n\\t\\tborder-left: unset;\\r\\n\\t\\tbackground: unset;\\r\\n\\t\\tpadding: 0.375rem;\\r\\n\\t\\twidth: 40ch;\\r\\n\\t}\\r\\n\\t.black {\\r\\n\\t\\tbackground-color: black;\\r\\n\\t}\\r\\n\\r\\n\\tlabel {\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\theight: 28px;\\r\\n\\t}\\r\\n\\tinput[type=\'checkbox\'] {\\r\\n\\t\\tdisplay: none;\\r\\n\\t}\\r\\n\\r\\n\\t.bonus td:has(:checked),\\r\\n\\ttd:has(:checked) {\\r\\n\\t\\tbackground: lightgreen;\\r\\n\\t}\\r\\n\\ttable.bonus td:has(:checked)::after,\\r\\n\\ttd:has(:checked)::after {\\r\\n\\t\\tcontent: var(--colorblind-v);\\r\\n\\t}\\r\\n\\ttable.bonus td::after,\\r\\n\\ttd:not(:first-child)::after {\\r\\n\\t\\toverflow: hidden;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tinset: 0;\\r\\n\\t\\tcontent: var(--colorblind-x);\\r\\n\\t\\tfont-family: sans-serif;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\t/* outline: 1px solid blue; */\\r\\n\\t\\ttop: 0.3rem;\\r\\n\\t\\tpointer-events: none;\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAiGC,iDAAK,CACJ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CACnB,qBAAqB,CAAE,OAAO,CAC9B,aAAa,CAAE,KAChB,CACA,kDAAM,CACL,eAAe,CAAE,QAClB,CACA,+CAAG,CACF,MAAM,CAAE,IACT,CACA,+CAAG,CACF,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,MACjB,CACA,iBAAE,CAAG,iCAAI,CACR,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,MAAM,CAAC,CAChD,KAAK,CAAE,IACR,CACA,iBAAE,CAAG,kBAAG,CAAG,mBAAK,CACf,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CACvB,CACA,+CAAG,CACF,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAC5B,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,CAAC,CACf,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,QACX,CACA,KAAK,qBAAM,CAAC,gCAAG,CACd,UAAU,CAAE,IACb,CACA,oBAAK,KAAK,MAAM,CAAC,CAAC,gCAAE,YAAa,CAChC,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,KAAK,CAClB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,QAAQ,CACjB,KAAK,CAAE,IACR,CACA,mDAAO,CACN,gBAAgB,CAAE,KACnB,CAEA,kDAAM,CACL,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IACT,CACA,KAAK,CAAC,IAAI,CAAC,UAAU,8CAAE,CACtB,OAAO,CAAE,IACV,CAEA,qBAAM,CAAC,gCAAE,KAAK,QAAQ,CAAC,CACvB,+CAAE,KAAK,QAAQ,CAAE,CAChB,UAAU,CAAE,UACb,CACA,KAAK,qBAAM,CAAC,gCAAE,KAAK,QAAQ,CAAC,OAAO,CACnC,+CAAE,KAAK,QAAQ,CAAC,OAAQ,CACvB,OAAO,CAAE,IAAI,cAAc,CAC5B,CACA,KAAK,qBAAM,CAAC,gCAAE,OAAO,CACrB,+CAAE,KAAK,YAAY,CAAC,OAAQ,CAC3B,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,OAAO,CAAE,IAAI,cAAc,CAAC,CAC5B,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,MAAM,CAElB,GAAG,CAAE,MAAM,CACX,cAAc,CAAE,IACjB"}'
};
const Group = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $data, $$unsubscribe_data;
  let { groupId } = $$props;
  let colorblind;
  let otherGroupIds = Object.keys(localStorage).filter((v) => v !== groupId);
  console.log(`Group name: ${groupId}, Other group: ${otherGroupIds[0]}`);
  let otherGroups = /* @__PURE__ */ new Map();
  for (let otherGroupId of otherGroupIds) {
    otherGroups.set(otherGroupId, JSON.parse(localStorage.getItem(otherGroupId) || ""));
  }
  let data = writable(JSON.parse(localStorage.getItem(groupId) || `{"name": "", "participants": [], "grid": []}`));
  $$unsubscribe_data = subscribe(data, (value) => $data = value);
  data.subscribe((value) => {
    localStorage.setItem(groupId, JSON.stringify(value));
  });
  if ($$props.groupId === void 0 && $$bindings.groupId && groupId !== void 0) $$bindings.groupId(groupId);
  $$result.css.add(css$1);
  $$unsubscribe_data();
  return ` <form class="svelte-16v8pjp"><table${add_attribute(
    "style",
    "",
    0
  )} class="svelte-16v8pjp">${$data.participants.length > 0 ? `<thead><tr class="svelte-16v8pjp"><th class="svelte-16v8pjp"><label style="width: 100%; height: 100%;" class="svelte-16v8pjp"><input type="checkbox" name="colorblind" class="svelte-16v8pjp"${add_attribute("checked", colorblind, 1)}></label></th> ${each($data.participants, (participant) => {
    return `<th class="svelte-16v8pjp"><div class="svelte-16v8pjp"><span class="svelte-16v8pjp">${escape(participant)}</span></div></th>`;
  })}</tr></thead> <tbody>${each($data.participants, (participant, k1) => {
    return `<tr class="svelte-16v8pjp"><td class="svelte-16v8pjp">${escape(participant)}&#39;s thread</td> ${each($data.participants, (_p2, k2) => {
      return `${k1 == k2 ? `<td class="black svelte-16v8pjp" data-svelte-h="svelte-1sj9f50"> </td>` : `<td class="svelte-16v8pjp"><label class="svelte-16v8pjp"><input type="checkbox"${add_attribute("name", `${k1}-${k2}`, 0)} ${$data.grid.indexOf(`${k1}-${k2}`) !== -1 ? "checked" : ""} class="svelte-16v8pjp"></label> </td>`}`;
    })} </tr>`;
  })}</tbody>` : ``}</table> ${each(otherGroups, ([_groupName, otherGroup], b1) => {
    return `<table${add_attribute(
      "style",
      "",
      0
    )} class="bonus svelte-16v8pjp"><thead><tr class="svelte-16v8pjp">${each(otherGroup.participants, (participant) => {
      return `<th class="svelte-16v8pjp"><div class="svelte-16v8pjp"><span class="svelte-16v8pjp">${escape(participant)}</span></div></th>`;
    })} </tr></thead> <tbody>${each($data.participants, (mainParticipant, k1) => {
      return `<tr class="svelte-16v8pjp">${each(otherGroup.participants, (_participant, k2) => {
        return `<td class="svelte-16v8pjp"><label class="svelte-16v8pjp"><input type="checkbox"${add_attribute("name", `b${b1}-${k1}-${k2}`, 0)} ${$data.grid.indexOf(`b${b1}-${k1}-${k2}`) !== -1 ? "checked" : ""} class="svelte-16v8pjp"></label> </td>`;
      })} </tr>`;
    })}</tbody> </table>`;
  })} </form>`;
});
const css = {
  code: "dialog.svelte-1bc092w form.svelte-1bc092w{display:flex;flex-direction:column}.buttonwrapper.svelte-1bc092w.svelte-1bc092w{display:flex;width:fit-content;margin:2rem auto}button.svelte-1bc092w.svelte-1bc092w{border:2px solid silver;padding:0.75rem 1.5rem;border-radius:8px;margin:0 2rem}.groupwrapper.svelte-1bc092w.svelte-1bc092w{margin:0 auto;display:grid;width:min-content;column-gap:30px;grid-template-columns:repeat(var(--colcount), min-content);grid-template-rows:repeat(var(--colcount), min-content);justify-items:start;align-items:start}.groupwrapper.svelte-1bc092w div.svelte-1bc092w{border:1px solid silver;border-radius:1rem;display:grid;padding:0.5rem 5rem 1.5rem 2rem;grid-column:1 / -1;grid-template-columns:subgrid}.groupwrapper.svelte-1bc092w h1.svelte-1bc092w{grid-column:1 / -1;font-size:2.2rem;font-family:sans-serif;justify-self:center;margin:0}.groupwrapper.svelte-1bc092w h2.svelte-1bc092w{text-transform:uppercase;font-family:sans-serif;font-size:2rem;justify-self:center;margin-block:0}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import Group from \\"./Group.svelte\\";\\nimport { onMount } from \\"svelte\\";\\nimport { writable } from \\"svelte/store\\";\\nlet groups = writable([]);\\nlet addGroupDialog;\\nlet participants = \\"\\";\\nconst addGroup = () => {\\n  const groupName = \\"Group \\" + ($groups.length + 1).toString();\\n  const participantlist = participants.split(/[,\\\\n\\\\t]/).map((v) => v.trim()).filter((v) => v !== \\"\\");\\n  localStorage.setItem(\\n    groupName,\\n    JSON.stringify({ name: groupName, participants: participantlist, grid: [] })\\n  );\\n  groups.update((v) => [...v, \\"Group \\" + ($groups.length + 1).toString()]);\\n  addGroupDialog.close();\\n  participants = \\"\\";\\n};\\nlet update = () => {\\n  $groups = Object.keys(localStorage);\\n};\\nlet clear = () => {\\n  localStorage.clear();\\n  update();\\n};\\nonMount(update);\\n<\/script>\\r\\n\\r\\n<div class=\\"buttonwrapper\\">\\r\\n\\t<button on:click={() => addGroupDialog.showModal()}>Add Group</button>\\r\\n\\t<button\\r\\n\\t\\ton:click={() => {\\r\\n\\t\\t\\tif (\\r\\n\\t\\t\\t\\tconfirm(\\r\\n\\t\\t\\t\\t\\t'Are you sure you want to clear all data? There is no undo, and all groups are removed.'\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t) {\\r\\n\\t\\t\\t\\tclear();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}}\\r\\n\\t>\\r\\n\\t\\tClear\\r\\n\\t</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\"groupwrapper\\" style=\\"--colcount: {$groups.length}\\">\\r\\n\\t{#each $groups as groupId}\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<h1 style=\\"grid-colum: 1 / -1\\">{groupId}</h1>\\r\\n\\t\\t\\t{#each new Array($groups.length) as _v, i}\\r\\n\\t\\t\\t\\t<h2>{i == 0 ? 'main' : 'bonus'}</h2>\\r\\n\\t\\t\\t{/each}\\r\\n\\t\\t\\t<Group {groupId} on:destroy={update}></Group>\\r\\n\\t\\t</div>\\r\\n\\t{/each}\\r\\n</div>\\r\\n<dialog bind:this={addGroupDialog}>\\r\\n\\t<form>\\r\\n\\t\\t<label for=\\"participants\\">Participants for new group (comma or newline separated):</label>\\r\\n\\t\\t<textarea name=\\"participants\\" id=\\"#participants\\" bind:value={participants} rows=\\"10\\"></textarea>\\r\\n\\t\\t<button on:click={addGroup}>Create Group</button>\\r\\n\\t\\t<button on:click={() => addGroupDialog.close()}>Close</button>\\r\\n\\t</form>\\r\\n</dialog>\\r\\n\\r\\n<style>\\r\\n\\tdialog form {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t}\\r\\n\\t.buttonwrapper {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\twidth: fit-content;\\r\\n\\t\\tmargin: 2rem auto;\\r\\n\\t}\\r\\n\\tbutton {\\r\\n\\t\\tborder: 2px solid silver;\\r\\n\\t\\tpadding: 0.75rem 1.5rem;\\r\\n\\t\\tborder-radius: 8px;\\r\\n\\t\\t/* float: right; */\\r\\n\\t\\tmargin: 0 2rem;\\r\\n\\t}\\r\\n\\t.groupwrapper {\\r\\n\\t\\tmargin: 0 auto;\\r\\n\\t\\tdisplay: grid;\\r\\n\\t\\twidth: min-content;\\r\\n\\t\\tcolumn-gap: 30px;\\r\\n\\t\\tgrid-template-columns: repeat(var(--colcount), min-content);\\r\\n\\t\\tgrid-template-rows: repeat(var(--colcount), min-content);\\r\\n\\t\\tjustify-items: start;\\r\\n\\t\\talign-items: start;\\r\\n\\t}\\r\\n\\t.groupwrapper div {\\r\\n\\t\\tborder: 1px solid silver;\\r\\n\\t\\tborder-radius: 1rem;\\r\\n\\t\\tdisplay: grid;\\r\\n\\t\\tpadding: 0.5rem 5rem 1.5rem 2rem;\\r\\n\\t\\tgrid-column: 1 / -1;\\r\\n\\t\\tgrid-template-columns: subgrid;\\r\\n\\t}\\r\\n\\t.groupwrapper h1 {\\r\\n\\t\\tgrid-column: 1 / -1;\\r\\n\\t\\tfont-size: 2.2rem;\\r\\n\\t\\tfont-family: sans-serif;\\r\\n\\t\\tjustify-self: center;\\r\\n\\t\\tmargin: 0;\\r\\n\\t}\\r\\n\\t.groupwrapper h2 {\\r\\n\\t\\ttext-transform: uppercase;\\r\\n\\t\\tfont-family: sans-serif;\\r\\n\\t\\tfont-size: 2rem;\\r\\n\\t\\tjustify-self: center;\\r\\n\\t\\tmargin-block: 0;\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAiEC,qBAAM,CAAC,mBAAK,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MACjB,CACA,4CAAe,CACd,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,WAAW,CAClB,MAAM,CAAE,IAAI,CAAC,IACd,CACA,oCAAO,CACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CACxB,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,aAAa,CAAE,GAAG,CAElB,MAAM,CAAE,CAAC,CAAC,IACX,CACA,2CAAc,CACb,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,WAAW,CAClB,UAAU,CAAE,IAAI,CAChB,qBAAqB,CAAE,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAC3D,kBAAkB,CAAE,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CACxD,aAAa,CAAE,KAAK,CACpB,WAAW,CAAE,KACd,CACA,4BAAa,CAAC,kBAAI,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CACxB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CACnB,qBAAqB,CAAE,OACxB,CACA,4BAAa,CAAC,iBAAG,CAChB,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CACnB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,UAAU,CACvB,YAAY,CAAE,MAAM,CACpB,MAAM,CAAE,CACT,CACA,4BAAa,CAAC,iBAAG,CAChB,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,UAAU,CACvB,SAAS,CAAE,IAAI,CACf,YAAY,CAAE,MAAM,CACpB,YAAY,CAAE,CACf"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $groups, $$unsubscribe_groups;
  let groups = writable([]);
  $$unsubscribe_groups = subscribe(groups, (value) => $groups = value);
  let addGroupDialog;
  $$result.css.add(css);
  $$unsubscribe_groups();
  return `<div class="buttonwrapper svelte-1bc092w"><button class="svelte-1bc092w" data-svelte-h="svelte-j1mpo7">Add Group</button> <button class="svelte-1bc092w" data-svelte-h="svelte-1pityn1">Clear</button></div> <div class="groupwrapper svelte-1bc092w" style="${"--colcount: " + escape($groups.length, true)}">${each($groups, (groupId) => {
    return `<div class="svelte-1bc092w"><h1 style="grid-colum: 1 / -1" class="svelte-1bc092w">${escape(groupId)}</h1> ${each(new Array($groups.length), (_v, i) => {
      return `<h2 class="svelte-1bc092w">${escape(i == 0 ? "main" : "bonus")}</h2>`;
    })} ${validate_component(Group, "Group").$$render($$result, { groupId }, {}, {})} </div>`;
  })}</div> <dialog class="svelte-1bc092w"${add_attribute("this", addGroupDialog, 0)}><form class="svelte-1bc092w"><label for="participants" data-svelte-h="svelte-84s6v8">Participants for new group (comma or newline separated):</label> <textarea name="participants" id="#participants" rows="10">${escape("")}</textarea> <button class="svelte-1bc092w" data-svelte-h="svelte-5hbba9">Create Group</button> <button class="svelte-1bc092w" data-svelte-h="svelte-yf8co5">Close</button></form> </dialog>`;
});
export {
  Page as default
};
